syntax = "proto3";
option csharp_namespace = "Client_BLCHxVote_WPF";
package Contract;



service BLCH_Contract {
  rpc AuthRegister(RegData) returns (AuthRegResult);
  rpc AuthLogin(AuthData) returns (AuthRegResult);
  rpc ChainSize(Wpar) returns (ResponseSize); //размер цепи
  rpc Balance(Address) returns (Lanb); //баланс на счете
  rpc ViewCandidates(Wpar) returns (stream CandidateList); // вывод кандидатов
  rpc Transfer(LowDataChain) returns (IsComplited); // раздача токенов
  rpc Vote(LowData) returns (IsComplitedVote); // голосование
  rpc TimeBlock(Wpar) returns (stream TimeData); //время до конца голосования
  rpc ChainPrint(Wpar) returns (Chain);
  rpc ResultsWinner(Wpar) returns (stream CandidateListWithBalance);
  rpc SoloWinner(Wpar) returns (CandidateList);
}

message CandidateListWithBalance {
  string candidatePK = 1;
  string candidateName = 2;
  string balance = 3;
}
message RegData{
  string Passport = 1;
  string PublicK = 2;
  string Salt = 3;
}
message AuthData{
  string PublicK = 1;
  string PrivateK = 2;
}
message AuthRegResult{
  string Distortion = 1;
}
message Wpar {

}
message ResponseSize {
  string size = 1;
}
message Address {
  string useradrr = 1;
}
message Lanb {
  string balance = 1;
}
message Chain {
  repeated string InBlock = 1;
}
message CandidateList {
  string candidatePK = 1;
  string candidateName = 2;
}
message LowData {
  string UserCandidate = 1;
  uint64 num = 2;
  string private = 3;
}
message LowDataChain {
  string UserCandidate = 1;
  uint64 num = 2;
}
message IsComplited {
  bool ic = 1;
}
message IsComplitedVote {
  string ic = 1;
}
message BlockDataGet {
  string BlockNum = 1;
}
message TimeData {
  string EndTime = 1;
}